
@using FinanceManagement.Client.ViewModels;

@inject HttpClient Http

<div class="card">
    <div class="card-header">
        Add Earning
    </div>
    <div class="card-body">
        <EditForm Model="@earning" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />   
            <div class="form-group">
                <label for="dateInput">Date</label>
                <InputDate class="form-control" id="dateInput" @bind-Value="earning.Date" />
            </div>
            <div class="form-group">
                <label for="subjectInput">Subject</label>
                <InputText class="form-control" id="subjectInput" @bind-Value="earning.Subject" />
            </div>
            <div class="form-group">
                <label for="categoryInput">Category</label>
                <InputSelect class="form-control" id="subjectInput" @bind-Value="earning.Category">
                    @{

                        foreach (var value in Enum.GetValues(typeof(EarningCategory)))
                        {
                            <option value="@value">@value</option>
                        }
                    }
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="amountInput">Amount</label>
                <InputNumber class="form-control" id="amountInput" @bind-Value="earning.Amount" />
            </div>
            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary">Submit</button>
                <button type="submit" class="btn btn-primary" @onclick="Cancel">Cancel</button>
            </div>

        </EditForm>
    </div>
</div>


@code {

    [Parameter]
    public Earning earning { get; set; } = new Earning { Date = DateTime.Today };

    public FinanceManagement.Client.ViewModels.EarningModel earningModel = new EarningModel { Date = DateTime.Today };

    [Parameter]
    public EventCallback OnSubmitCallback { get; set; }

    private async void HandleValidSubmit()
    {
        if (earning?.Id != null)
        {
            await Http.PutAsJsonAsync<Earning?>($"Earnings/{earning?.Id}", earning);
        }
        else
        {
            await Http.PostAsJsonAsync<Earning?>("Earnings", earning);
        }
        earning = new Earning { Date = DateTime.Today };
        await OnSubmitCallback.InvokeAsync();
    }

    private void Cancel() => earning = new Earning { Date = DateTime.Today };
}

